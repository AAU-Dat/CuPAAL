//
// Created by runge on 2/24/25.
//
#include <iostream>
#include "../src/cupaal/baum_welch.h"
#include "../src/cupaal/cudd_extensions.h"
#include "../src/cupaal/helpers.h"


void experiment20() {
    DdManager *dd_manager = Cudd_Init(0, 0,CUDD_UNIQUE_SLOTS,CUDD_CACHE_SLOTS, 0);
    Cudd_SetEpsilon(dd_manager, 0);

    const std::vector<label> observation = {
        "d", "a", "b", "a", "c", "c", "d", "d", "d", "a", "b", "d", "c", "d", "b", "e", "c", "c", "e", "d"
    };

    cupaal::MarkovModel_ADD model;
    model.manager = dd_manager;
    model.states = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
    model.labels = {"a", "b", "c", "d", "e"};
    model.observations.push_back(observation);

    double emissions[] = {
        0.09375, 0.21875, 0.15625, 0.25, 0.28125,
        0.16666666666666666, 0.4166666666666667, 0.20833333333333334, 0.041666666666666664, 0.16666666666666666,
        0.047619047619047616, 0.2857142857142857, 0.23809523809523808, 0.3333333333333333, 0.09523809523809523,
        0.34615384615384615, 0.11538461538461539, 0.19230769230769232, 0.23076923076923078, 0.11538461538461539,
        0.1724137931034483, 0.2413793103448276, 0.1724137931034483, 0.10344827586206896, 0.3103448275862069,
        0.08, 0.16, 0.36, 0.24, 0.16,
        0.2962962962962963, 0.18518518518518517, 0.25925925925925924, 0.1111111111111111, 0.14814814814814814,
        0.3, 0.1, 0.15, 0.25, 0.2,
        0.16666666666666666, 0.05555555555555555, 0.3333333333333333, 0.3888888888888889, 0.05555555555555555,
        0.10714285714285714, 0.25, 0.35714285714285715, 0.17857142857142858, 0.10714285714285714,
        0.22857142857142856, 0.2571428571428571, 0.2, 0.2857142857142857, 0.02857142857142857,
        0.34782608695652173, 0.34782608695652173, 0.17391304347826086, 0.043478260869565216, 0.08695652173913043,
        0.13793103448275862, 0.3103448275862069, 0.06896551724137931, 0.20689655172413793, 0.27586206896551724,
        0.23529411764705882, 0.23529411764705882, 0.058823529411764705, 0.23529411764705882, 0.23529411764705882,
        0.1724137931034483, 0.20689655172413793, 0.27586206896551724, 0.10344827586206896, 0.2413793103448276,
        0.35714285714285715, 0.07142857142857142, 0.35714285714285715, 0.10714285714285714, 0.10714285714285714,
        0.26666666666666666, 0.3333333333333333, 0.03333333333333333, 0.26666666666666666, 0.1,
        0.034482758620689655, 0.1724137931034483, 0.3448275862068966, 0.3448275862068966, 0.10344827586206896,
        0.12903225806451613, 0.25806451612903225, 0.06451612903225806, 0.2903225806451613, 0.25806451612903225,
        0.11538461538461539, 0.19230769230769232, 0.23076923076923078, 0.19230769230769232, 0.2692307692307692
    };

    double initial_states[] = {
        1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
    };

    double transitions[] = {
        0.03278688524590164, 0.00819672131147541, 0.08196721311475409, 0.06557377049180328, 0.02459016393442623,
        0.05737704918032787, 0.06557377049180328, 0.07377049180327869, 0.06557377049180328, 0.05737704918032787,
        0.08196721311475409, 0.00819672131147541, 0.08196721311475409, 0.01639344262295082, 0.05737704918032787,
        0.05737704918032787, 0.01639344262295082, 0.07377049180327869, 0.06557377049180328, 0.00819672131147541,
        0.06097560975609756, 0.024390243902439025, 0.10975609756097561, 0.024390243902439025, 0.07317073170731707,
        0.08536585365853659, 0.024390243902439025, 0.012195121951219513, 0.036585365853658534, 0.10975609756097561,
        0.04878048780487805, 0.024390243902439025, 0.06097560975609756, 0.036585365853658534, 0.012195121951219513,
        0.024390243902439025, 0.0975609756097561, 0.07317073170731707, 0.024390243902439025, 0.036585365853658534,
        0.05555555555555555, 0.05555555555555555, 0.018518518518518517, 0.07407407407407407, 0.046296296296296294,
        0.07407407407407407, 0.009259259259259259, 0.009259259259259259, 0.027777777777777776, 0.07407407407407407,
        0.08333333333333333, 0.037037037037037035, 0.09259259259259259, 0.05555555555555555, 0.08333333333333333,
        0.037037037037037035, 0.046296296296296294, 0.009259259259259259, 0.018518518518518517, 0.09259259259259259,
        0.009523809523809525, 0.02857142857142857, 0.02857142857142857, 0.0761904761904762, 0.05714285714285714,
        0.06666666666666667, 0.0761904761904762, 0.01904761904761905, 0.047619047619047616, 0.01904761904761905,
        0.0761904761904762, 0.0380952380952381, 0.0380952380952381, 0.06666666666666667, 0.05714285714285714,
        0.02857142857142857, 0.06666666666666667, 0.047619047619047616, 0.0761904761904762, 0.0761904761904762,
        0.03333333333333333, 0.041666666666666664, 0.008333333333333333, 0.03333333333333333, 0.05, 0.05, 0.075,
        0.075, 0.041666666666666664, 0.058333333333333334, 0.03333333333333333, 0.058333333333333334, 0.05,
        0.041666666666666664, 0.058333333333333334, 0.058333333333333334, 0.08333333333333333, 0.03333333333333333,
        0.041666666666666664, 0.075,
        0.010101010101010102, 0.04040404040404041, 0.10101010101010101, 0.04040404040404041, 0.10101010101010101,
        0.020202020202020204, 0.10101010101010101, 0.06060606060606061, 0.06060606060606061, 0.050505050505050504,
        0.04040404040404041, 0.020202020202020204, 0.050505050505050504, 0.09090909090909091, 0.04040404040404041,
        0.030303030303030304, 0.08080808080808081, 0.010101010101010102, 0.04040404040404041, 0.010101010101010102,
        0.05263157894736842, 0.043859649122807015, 0.03508771929824561, 0.05263157894736842, 0.03508771929824561,
        0.05263157894736842, 0.05263157894736842, 0.06140350877192982, 0.07894736842105263, 0.05263157894736842,
        0.07017543859649122, 0.017543859649122806, 0.07017543859649122, 0.06140350877192982, 0.06140350877192982,
        0.043859649122807015, 0.02631578947368421, 0.008771929824561403, 0.08771929824561403, 0.03508771929824561,
        0.015625, 0.0625, 0.03125, 0.0390625, 0.0625, 0.0625, 0.046875, 0.0390625, 0.046875, 0.078125, 0.015625,
        0.078125, 0.0625, 0.015625, 0.046875, 0.046875, 0.0546875, 0.0703125, 0.0703125, 0.0546875,
        0.07092198581560284, 0.04964539007092199, 0.0425531914893617, 0.04964539007092199, 0.0425531914893617,
        0.06382978723404255, 0.05673758865248227, 0.02127659574468085, 0.06382978723404255, 0.07092198581560284,
        0.014184397163120567, 0.06382978723404255, 0.06382978723404255, 0.03546099290780142, 0.0425531914893617,
        0.0425531914893617, 0.06382978723404255, 0.07092198581560284, 0.05673758865248227, 0.014184397163120567,
        0.056074766355140186, 0.09345794392523364, 0.08411214953271028, 0.04672897196261682, 0.06542056074766354,
        0.07476635514018691, 0.08411214953271028, 0.08411214953271028, 0.009345794392523364, 0.07476635514018691,
        0.037383177570093455, 0.009345794392523364, 0.07476635514018691, 0.08411214953271028, 0.018691588785046728,
        0.009345794392523364, 0.06542056074766354, 0.009345794392523364, 0.009345794392523364, 0.009345794392523364,
        0.043859649122807015, 0.008771929824561403, 0.03508771929824561, 0.017543859649122806, 0.07894736842105263,
        0.05263157894736842, 0.017543859649122806, 0.08771929824561403, 0.06140350877192982, 0.07894736842105263,
        0.06140350877192982, 0.08771929824561403, 0.02631578947368421, 0.06140350877192982, 0.05263157894736842,
        0.08771929824561403, 0.043859649122807015, 0.017543859649122806, 0.017543859649122806, 0.06140350877192982,
        0.034482758620689655, 0.04310344827586207, 0.07758620689655173, 0.0603448275862069, 0.04310344827586207,
        0.04310344827586207, 0.08620689655172414, 0.034482758620689655, 0.008620689655172414, 0.0603448275862069,
        0.08620689655172414, 0.008620689655172414, 0.05172413793103448, 0.05172413793103448, 0.017241379310344827,
        0.0603448275862069, 0.02586206896551724, 0.07758620689655173, 0.05172413793103448, 0.07758620689655173,
        0.0297029702970297, 0.039603960396039604, 0.0594059405940594, 0.019801980198019802, 0.0297029702970297,
        0.009900990099009901, 0.019801980198019802, 0.039603960396039604, 0.07920792079207921, 0.06930693069306931,
        0.0891089108910891, 0.0297029702970297, 0.0594059405940594, 0.04950495049504951, 0.0594059405940594,
        0.09900990099009901, 0.0297029702970297, 0.07920792079207921, 0.0297029702970297, 0.07920792079207921,
        0.061946902654867256, 0.02654867256637168, 0.035398230088495575, 0.07079646017699115, 0.05309734513274336,
        0.008849557522123894, 0.02654867256637168, 0.04424778761061947, 0.07079646017699115, 0.07964601769911504,
        0.07079646017699115, 0.017699115044247787, 0.04424778761061947, 0.035398230088495575, 0.017699115044247787,
        0.07079646017699115, 0.08849557522123894, 0.04424778761061947, 0.07964601769911504, 0.05309734513274336,
        0.06542056074766354, 0.04672897196261682, 0.028037383177570093, 0.028037383177570093, 0.08411214953271028,
        0.056074766355140186, 0.056074766355140186, 0.06542056074766354, 0.028037383177570093, 0.06542056074766354,
        0.08411214953271028, 0.018691588785046728, 0.009345794392523364, 0.09345794392523364, 0.07476635514018691,
        0.028037383177570093, 0.06542056074766354, 0.04672897196261682, 0.037383177570093455, 0.018691588785046728,
        0.03361344537815126, 0.01680672268907563, 0.08403361344537816, 0.025210084033613446, 0.08403361344537816,
        0.05042016806722689, 0.058823529411764705, 0.058823529411764705, 0.06722689075630252, 0.05042016806722689,
        0.06722689075630252, 0.03361344537815126, 0.01680672268907563, 0.08403361344537816, 0.07563025210084033,
        0.01680672268907563, 0.008403361344537815, 0.025210084033613446, 0.07563025210084033, 0.06722689075630252,
        0.01652892561983471, 0.0743801652892562, 0.024793388429752067, 0.08264462809917356, 0.024793388429752067,
        0.06611570247933884, 0.06611570247933884, 0.05785123966942149, 0.01652892561983471, 0.049586776859504134,
        0.049586776859504134, 0.08264462809917356, 0.05785123966942149, 0.049586776859504134, 0.01652892561983471,
        0.049586776859504134, 0.08264462809917356, 0.008264462809917356, 0.0743801652892562, 0.049586776859504134,
        0.06140350877192982, 0.043859649122807015, 0.008771929824561403, 0.07017543859649122, 0.02631578947368421,
        0.043859649122807015, 0.017543859649122806, 0.008771929824561403, 0.06140350877192982, 0.07017543859649122,
        0.07017543859649122, 0.07017543859649122, 0.017543859649122806, 0.07894736842105263, 0.03508771929824561,
        0.06140350877192982, 0.017543859649122806, 0.07017543859649122, 0.07894736842105263, 0.08771929824561403,
        0.07407407407407407, 0.018518518518518517, 0.009259259259259259, 0.027777777777777776, 0.06481481481481481,
        0.009259259259259259, 0.05555555555555555, 0.027777777777777776, 0.08333333333333333, 0.018518518518518517,
        0.06481481481481481, 0.046296296296296294, 0.09259259259259259, 0.05555555555555555, 0.037037037037037035,
        0.06481481481481481, 0.027777777777777776, 0.08333333333333333, 0.06481481481481481, 0.07407407407407407,
        0.031578947368421054, 0.05263157894736842, 0.010526315789473684, 0.010526315789473684, 0.07368421052631578,
        0.05263157894736842, 0.05263157894736842, 0.05263157894736842, 0.09473684210526316, 0.021052631578947368,
        0.031578947368421054, 0.031578947368421054, 0.06315789473684211, 0.042105263157894736, 0.08421052631578947,
        0.05263157894736842, 0.07368421052631578, 0.06315789473684211, 0.042105263157894736, 0.06315789473684211
    };

    double transpose_emission[100];
    for(int i = 0; i < 20; i++) {
        for (int j = 0; j < 5; j++) {
            transpose_emission[j * 20 + j] = emissions[i * 5 + j];
        }
        std::cout << std::endl;
    }
    for (int i = 0; i < 100; i++) {
        std::cout << emissions[i];
        if (i % 5 == 0) {
            std::cout << std::endl;
        }
    }

    model.initialize_helpers();
    model.initialize_probabilities(transitions, emissions, initial_states);
    auto report = model.baum_welch_add(1000);

    std::cout << "Iterations: " << report.iterations << std::endl;
    std::cout << "Microseconds: " << report.microseconds << std::endl;
    std::cout << "Log likelihood: " << report.log_likelihood << std::endl;
    Cudd_Quit(dd_manager);
}